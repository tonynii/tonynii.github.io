(window.webpackJsonp=window.webpackJsonp||[]).push([[91],{517:function(i,t,e){"use strict";e.r(t);var a=e(2),s=Object(a.a)({},(function(){var i=this,t=i._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":i.$parent.slotKey}},[t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"title"}),t("p",[i._v("在自动化测试中经常会使用邮件发送执行结果和日志文件，如果日志中存在大量图像文件，往往会因为邮件附件太大，被邮件服务器拒绝发送。这时往往需要通过压缩文件来解决，下面介绍使用zipfile和PIL库压缩文件和图像的方法。")])]),t("h2",{attrs:{id:"pil的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pil的使用"}},[i._v("#")]),i._v(" PIL的使用")]),i._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[i._v("from PIL import Image\n\nim = Image.open('text.jpg')\nw,h = im.size\nim.resize((int(w/2), int(h/2)),Image.ANTIALIAS).save('text1.jpg', \"jpeg\")\n")])])]),t("p",[i._v("上文代码解析如下：")]),i._v(" "),t("ul",[t("li",[i._v("Image.open('text.jpg')：打开图像文件，该方法返回Image对象")]),i._v(" "),t("li",[i._v("im.size：获取图像当前的大小")]),i._v(" "),t("li",[i._v("im.resize((int(w/2), int(h/2)),Image.ANTIALIAS)：压缩图像大小为原来的一半，可以改变(int(w/2), int(h/2))去改变压缩比；Image.ANTIALIAS参数为压缩的方法，一般使用这个值即可，此值为最佳画质。")]),i._v(" "),t("li",[i._v("save('text1.jpg', \"jpeg\")：保存新图像到test1.jpg文件中")])]),i._v(" "),t("h2",{attrs:{id:"zipfile的使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#zipfile的使用"}},[i._v("#")]),i._v(" zipfile的使用")]),i._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[i._v("import zipfile\n\nwith zipfile.ZipFile('test.zip', 'w', zipfile.ZIP_DEFLATED) as f:\n    f.write('test.html')\n")])])]),t("p",[i._v("代码解析：")]),i._v(" "),t("ul",[t("li",[i._v("zipfile.ZIP_DEFLATED：压缩模式，具体可以看帮助文档")]),i._v(" "),t("li",[i._v("f.write('test.html')：将文件test.html写入压缩文档")])]),i._v(" "),t("h2",{attrs:{id:"pil和zipfile组合使用"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#pil和zipfile组合使用"}},[i._v("#")]),i._v(" PIL和zipfile组合使用")]),i._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[i._v("import zipfile\n\nfrom PIL import Image\n\nwith zipfile.ZipFile('test.zip', 'w', zipfile.ZIP_DEFLATED) as f:\n\n    im_io = io.BytesIO()\n    im_p = 'test.img'\n    im = Image.open(im_p)\n    w,h = im.size\n    im.resize((int(w/2), int(h/2)),Image.ANTIALIAS).save(im_io, \"jpeg\")\n    f.writestr(im_p,im_io.getvalue())\n")])])]),t("p",[i._v("代码解析：")]),i._v(" "),t("ul",[t("li",[i._v("此段代码主要作用是在不改变原图像大小的情况下，将压缩到一半大小的图像写入压缩文件。")]),i._v(" "),t("li",[i._v("im_io = io.BytesIO()：获取一个IO流文件，主要用来缓存压缩的图像")]),i._v(" "),t("li",[i._v("f.writestr(im_p,im_io.getvalue())：将数据流写入压缩文件，这里使用的是writestr。")])]),i._v(" "),t("h2",{attrs:{id:"其它"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[i._v("#")]),i._v(" 其它")]),i._v(" "),t("p",[i._v("如果压缩比很是不够可以通过img.convert('L')改变灰度模式进一步减少大小。")])])}),[],!1,null,null,null);t.default=s.exports}}]);