(window.webpackJsonp=window.webpackJsonp||[]).push([[98],{523:function(e,n,t){"use strict";t.r(n);var s=t(2),a=Object(s.a)({},(function(){var e=this,n=e._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[n("div",{staticClass:"custom-block tip"},[n("p",{staticClass:"title"}),n("p",[e._v("ESPHome是一款流行的IOT设备平台，支持ESP8266、ESP32等板。恰好之前购入一款已经无法使用的IOT设备，上面正好是ESP8266版本，最近刚好在上面安装ESPHome，本文记录安装过程，如果能给大家带来帮助就更好了。")])]),n("h1",{attrs:{id:"设备介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#设备介绍"}},[e._v("#")]),e._v(" 设备介绍")]),e._v(" "),n("p",[e._v("本次设备为之前购入欧普出品的IOT设备，不知何故厂商已经提供服务了，设备上有ESP8266无线小板及一枚STM32单片机，提供红外发射、接收以及433/315射频信号，如下照片。")]),e._v(" "),n("p",[n("img",{attrs:{src:"/2022/IMG_20220612_204813.jpg",alt:"1",title:"1"}}),e._v(" "),n("img",{attrs:{src:"/2022/IMG_20220612_205030.jpg",alt:"2",title:"2"}}),e._v(" "),n("img",{attrs:{src:"/2022/IMG_20220612_210617.jpg",alt:"3",title:"3"}})]),e._v(" "),n("p",[e._v("电路图为")]),e._v(" "),n("h1",{attrs:{id:"安装基础版固件"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装基础版固件"}},[e._v("#")]),e._v(" 安装基础版固件")]),e._v(" "),n("p",[e._v("这里使用官方提供的web页面进行安装。")]),e._v(" "),n("ul",[n("li",[e._v("将ESP8266的GPIO0下拉（接入GND）之后接通电源，此时板子进入固件更新模式")]),e._v(" "),n("li",[e._v("打开"),n("a",{attrs:{href:"https://esphome.github.io/esp-web-tools/",target:"_blank",rel:"noopener noreferrer"}},[e._v("esp-web-tools"),n("OutboundLink")],1),e._v("页面")]),e._v(" "),n("li",[e._v("点击“CONNECT“按钮")]),e._v(" "),n("li",[e._v("选择已经连接到板子UART0的串口设备")]),e._v(" "),n("li",[e._v("根据页面提示进行操作")]),e._v(" "),n("li",[e._v('刷写成功后，在电脑上搜索“ESP Web Tools"的为WiFi并连接')]),e._v(" "),n("li",[e._v("打开浏览器，输入网关IP地址，进入ESPHome管理界面")]),e._v(" "),n("li",[e._v("输入可以连接上网的wifi名称与密码")])]),e._v(" "),n("h1",{attrs:{id:"安装esphome-dashboard"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装esphome-dashboard"}},[e._v("#")]),e._v(" 安装ESPHome Dashboard")]),e._v(" "),n("p",[e._v("推荐使用docker进行安装，非常方面，指令如下：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('docker run -d --rm --net=host -v "${PWD}":/config esphome/esphome\n')])])]),n("p",[e._v("推荐新建文件夹之后运行上述命令，因为之后的配置都会保存在当前文件夹下。")]),e._v(" "),n("p",[e._v("docker创建成功之后在浏览器中输入“http://docker的IP:6052“即可等入管理页面")]),e._v(" "),n("h1",{attrs:{id:"配置esphome"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#配置esphome"}},[e._v("#")]),e._v(" 配置ESPHome")]),e._v(" "),n("p",[e._v("在登陆ESPHome Dashboard页面之后，如果之前的基础版固件成功运行并在一个局域网，主页将会显示："),n("br"),e._v(" "),n("img",{attrs:{src:"/2022/Dashboard-ESPHome.png",alt:"初始化",title:"初始化"}}),n("br"),e._v("\n点击“ADOPT“，输入设备名称")]),e._v(" "),n("p",[e._v("点击“Install”之后并会再次OTA安装,可以点击取消")]),e._v(" "),n("p",[e._v("点击“Edit”按钮可以编辑yaml配置文件，可以参考"),n("a",{attrs:{href:"https://esphome.io/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("官方的介绍"),n("OutboundLink")],1),e._v("编辑，如希望添加IP信息输出则可以编辑yaml为：")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('substitutions:\n  name: smart\npackages:\n  esphome.esp_web_tools_example: github://esphome/example-configs/esp-web-tools/esp8266.yaml@v1\nesphome:\n  name: ${name}\n  name_add_mac_suffix: false\n\n\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n\nstatus_led:\n  pin: GPIO15\n\ntext_sensor:\n  - platform: version\n    name: "ESPHome Version"\n  - platform: wifi_info\n    ip_address:\n      name: ESP IP Address\n    ssid:\n      name: ESP Connected SSID\n    bssid:\n      name: ESP Connected BSSID\n    mac_address:\n      name: ESP Mac Wifi Address\n    scan_results:\n      name: ESP Latest Scan Results\n  - platform: template\n    name: Uptime Human Readable\n    id: uptime_human\n    icon: mdi:clock-start\nsensor:\n  - platform: uptime\n    name: Uptime Sensor\n    id: uptime_sensor\n    update_interval: 120s\n    on_raw_value:\n      then:\n        - text_sensor.template.publish:\n            id: uptime_human\n            state: !lambda |-\n              int seconds = round(id(uptime_sensor).raw_state);\n              int days = seconds / (24 * 3600);\n              seconds = seconds % (24 * 3600);\n              int hours = seconds / 3600;\n              seconds = seconds % 3600;\n              int minutes = seconds /  60;\n              seconds = seconds % 60;\n              return (\n                (days ? to_string(days) + "d " : "") +\n                (hours ? to_string(hours) + "h " : "") +\n                (minutes ? to_string(minutes) + "m " : "") +\n                (to_string(seconds) + "s")\n              ).c_str();\n')])])]),n("p",[e._v('点击“INSTALL”在弹出页面选择"WIRELESS"安装（OTA）')]),e._v(" "),n("p",[e._v("等待安装完成后在主页面点击“Visit”，打开单板web页面，显示如下："),n("br"),e._v(" "),n("img",{attrs:{src:"/2022/smart-89a911.png",alt:"单板",title:"单板"}})]),e._v(" "),n("p",[e._v("ESPHome 提供了很多组件，我的单板提供了IR收发的二极管，通过编辑yaml，从日志中读取原始红外码，之后添加button发射遥控信号，方法与上述类似，这里附上我的配置文件，其中控制电视用的是nec编码，控制灯用的是原始编码。")]),e._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[e._v('substitutions:\n  name: "esp-iot01"\npackages:\n  esphome.esp_web_tools_example: github://esphome/example-configs/esp-web-tools/esp8266.yaml@v1\nesphome:\n  name: ${name}\n  name_add_mac_suffix: false\n\nwifi:\n  ssid: !secret wifi_ssid\n  password: !secret wifi_password\n\nstatus_led:\n  pin: GPIO15\n\nremote_receiver:\n  pin:\n    number: GPIO12\n    inverted: true\n    mode:\n      input: true\n      pullup: true\n  dump: raw\n\n# Example configuration entry\nremote_transmitter:\n  pin: GPIO14\n  carrier_duty_percent: 50%\n\n# Individual switches\n# switch:\n#   - platform: template\n#     name: "TV_ON/OFF"\n#     turn_on_action:\n#       remote_transmitter.transmit_nec:\n#         address: 0xBF00\n#         command: 0xF20D\n\nbutton:\n  - platform: template\n    name: "TV Power Button"\n    icon: "mdi:power-standby"\n    on_press:\n      - remote_transmitter.transmit_nec:\n          address: 0xBF00\n          command: 0xF20D\n  \n  - platform: template\n    name: "TV Vol Down"\n    icon: "mdi:volume-minus"\n    on_press:\n      - remote_transmitter.transmit_nec:\n          address: 0xBF00\n          command: 0xBC43\n  \n  - platform: template\n    name: "TV Vol Up"\n    icon: "mdi:volume-plus"\n    on_press:\n      - remote_transmitter.transmit_nec:\n          address: 0xBF00\n          command: 0xBB44\n  \n  - platform: template\n    name: "Light Nor"\n    icon: "mdi:ceiling-light"\n    on_press:\n      - remote_transmitter.transmit_raw:\n          carrier_frequency: 38kHz\n          code: [3551, -1652, 502, -369, 527, -344, 527, -1216, 527, -1215, 528, -344, 527, -1215, 527, -344, 552, -321, 526, -344, 527, -1215, 553, -319, 527, -346, 525, -1218, 525, -344, 528, -1214, 528, -344, 527, -1215, 552, -320, 552, -319, 528, -1218, \n  524, -344, 527, -345, 551, -320, 552, -319, 527, -1216, 527, -344, 528, -1216, 526, -1215, 527, -344, 528, -1215, 554, -317, 552, -319, 553, -319, 527, -344, 552, -1190, 552, -321, 551, -319, 553, -1193, 550, -318, 552, -320, 527]\n  \n  - platform: template\n    name: "Light Sun"\n    icon: "mdi:ceiling-light-multiple"\n    on_press:\n      - remote_transmitter.transmit_raw:\n          carrier_frequency: 38kHz\n          code: [3529, -1674, 554, -316, 555, -317, 530, -1212, 556, -1187, 530, -341, 555, -1187, 553, -320, 529, -341, 555, -317, 555, -1188, 529, -342, 530, -341, 555, -1187, 555, -317, 554, -1188, 555, -317, 554, -1188, 554, -318, 554, -317, 530, -1213, \n    530, -1212, 530, -1213, 554, -317, 554, -317, 531, -341, 555, -1188, 553, -318, 554, -1188, 555, -317, 554, -317, 554, -317, 531, -1212, 554, -1189, 554, -1188, 554, -318, 554, -316, 557, -1186, 530, -1213, 555, -316, 530, -1213, 555]\n  \n  - platform: template\n    name: "Light Warn"\n    icon: "mdi:ceiling-light-multiple-outline"\n    on_press:\n      - remote_transmitter.transmit_raw:\n          carrier_frequency: 38kHz\n          code: [3531, -1672, 506, -366, 530, -341, 530, -1212, 531, -1212, 530, -341, 531, -1212, 531, -341, 530, -340, 531, -341, 531, -1211, 531, -341, 530, -342, 530, -1212, 530, -341, 531, -1212, 530, -341, 535, -1208, 530, -341, 531, -340, 556, -1187, \n  530, -1216, 527, -1211, 532, -341, 530, -341, 530, -1212, 531, -1212, 531, -341, 530, -1212, 530, -341, 556, -316, 530, -344, 553, -1186, 531, -341, 556, -1187, 530, -341, 533, -338, 531, -1212, 556, -1186, 532, -339, 532, -1211, 531]\n  \n  - platform: template\n    name: "Light Night"\n    icon: "mdi:ceiling-light-multiple-outline"\n    on_press:\n      - remote_transmitter.transmit_raw:\n          carrier_frequency: 38kHz\n          code: [3552, -1651, 552, -319, 528, -343, 528, -1214, 553, -1190, 531, -346, 522, -1217, 526, -343, 528, -344, 527, -344, 528, -1214, 553, -319, 528, -343, 528, -1214, 528, -344, 553, -1189, 528, -346, 526, -1214, 553, -319, 528, -344, 527, -1214, \n      529, -343, 528, -343, 553, -319, 528, -343, 552, -320, 528, -1214, 528, -1214, 528, -1215, 552, -320, 527, -1214, 554, -318, 555, -317, 528, -1214, 528, -1218, 524, -1215, 553, -318, 528, -344, 528, -1214, 528, -343, 529, -343, 528]\n')])])]),n("h1",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[e._v("#")]),e._v(" 参考")]),e._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://esphome.io/index.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("主页"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://bbs.hassbian.com/thread-12511-1-1.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("[经验分享] ESPHome做了一个万能遥控器"),n("OutboundLink")],1)]),e._v(" "),n("li",[n("a",{attrs:{href:"https://codess.cc/archives/277.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("ESP-01/01S 接入HomeAssistant，实现Siri控制"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);n.default=a.exports}}]);